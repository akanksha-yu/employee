{"ast":null,"code":"var _jsxFileName = \"D:\\\\crud_employee\\\\todoApp-master\\\\todo\\\\client\\\\src\\\\components\\\\signup\\\\signup.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { signup } from \"../../actions/user\";\nimport \"./signup.css\";\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (value, name) => {\n      this.setState(prevstate => {\n        return {\n          [name]: value\n        };\n      });\n    };\n\n    this.userExists = errorData => {\n      if (errorData) {\n        this.setState({\n          userExists: errorData\n        });\n      }\n\n      console.log(errorData);\n\n      if (errorData === \"\") {\n        this.setState({\n          signUpDone: \"All set.Proceed to Login.\"\n        });\n      }\n\n      setTimeout(() => {\n        this.setState({\n          userExists: \"\",\n          signUpDone: \"\"\n        });\n      }, 3000);\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            ConfirmPassword = _this$state.ConfirmPassword,\n            Password = _this$state.Password,\n            Username = _this$state.Username;\n\n      if (ConfirmPassword === Password && Username.length > 3) {\n        this.setState({\n          errorPassword: \"\",\n          errorUsername: \"\",\n          Username: \"\",\n          Password: \"\",\n          ConfirmPassword: \"\"\n        });\n        this.props.signup({\n          Username,\n          Password\n        }, this.userExists);\n      }\n\n      if (ConfirmPassword !== Password) {\n        this.setState({\n          errorPassword: \"Passwords do not match.\"\n        });\n      }\n\n      if (Username.length <= 3) {\n        this.setState({\n          errorUsername: \"Username should be greater than 3 characters\"\n        });\n      }\n    };\n\n    this.renderSignupForm = () => {\n      const fields = [{\n        tag: \"input\",\n        label: \"Username\",\n        type: \"text\",\n        className: \"input-field\",\n        value: this.state.Username,\n        onChange: this.handleChange,\n        error: this.state.errorUsername\n      }, {\n        tag: \"input\",\n        label: \"Password\",\n        type: \"password\",\n        className: \"input-field\",\n        value: this.state.Password,\n        onChange: this.handleChange\n      }, {\n        tag: \"input\",\n        label: \"ConfirmPassword\",\n        type: \"password\",\n        className: \"input-field\",\n        value: this.state.ConfirmPassword,\n        onChange: this.handleChange,\n        error: this.state.errorPassword\n      }];\n      return fields.map((field, i) => {\n        if (field.tag === \"input\") {\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"field-container\",\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, field.label, \":\"), React.createElement(\"input\", {\n            className: \"input-field\",\n            type: field.type,\n            value: field.value,\n            onChange: e => field.onChange(e.target.value, field.label),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          })), field.label !== \"Password\" ? React.createElement(\"div\", {\n            className: \"error-validation\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, field.error) : null);\n        }\n      });\n    };\n\n    this.state = {\n      Username: \"\",\n      Password: \"\",\n      ConfirmPassword: \"\",\n      errorPassword: \"\",\n      errorUsername: \"\",\n      userExists: \"\",\n      signUpDone: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"signup-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => {\n        this.onSubmit(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.renderSignupForm(), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn-login\",\n      id: \"btn-signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Signup\")), React.createElement(\"div\", {\n      className: \"user-exists-tooltip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.userExists), React.createElement(\"div\", {\n      className: \"user-exists-tooltip\",\n      style: {\n        color: \"green\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.signUpDone));\n  }\n\n}\n\nexport default connect(null, {\n  signup\n})(Signup);","map":{"version":3,"sources":["D:/crud_employee/todoApp-master/todo/client/src/components/signup/signup.js"],"names":["React","connect","signup","Signup","Component","constructor","props","handleChange","value","name","setState","prevstate","userExists","errorData","console","log","signUpDone","setTimeout","onSubmit","e","preventDefault","state","ConfirmPassword","Password","Username","length","errorPassword","errorUsername","renderSignupForm","fields","tag","label","type","className","onChange","error","map","field","i","target","render","color"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {connect} from \"react-redux\";\nimport {signup} from \"../../actions/user\"\nimport \"./signup.css\"\nclass Signup extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            Username:\"\",\n            Password:\"\",\n            ConfirmPassword:\"\",\n            errorPassword:\"\",\n            errorUsername:\"\",\n            userExists:\"\",\n            signUpDone:\"\"\n        }\n    }\n    handleChange=(value,name)=>{\n        this.setState((prevstate)=>{\n            return{\n            [name]:value\n            }\n        })\n    }\n    userExists=(errorData)=>{\n        if(errorData){\n        this.setState({userExists:errorData});\n        }\n        console.log(errorData)\n        if(errorData===\"\"){\n        this.setState({\n            signUpDone:\"All set.Proceed to Login.\"\n        })\n    }\n        setTimeout(()=>{this.setState({userExists:\"\",signUpDone:\"\"})},3000)\n    }\n    onSubmit=(e)=>{\n        e.preventDefault();\n        const {ConfirmPassword,Password,Username}=this.state;\n        if(ConfirmPassword===Password && Username.length >3){\n        \n        this.setState({\n            errorPassword:\"\",\n            errorUsername:\"\",\n            Username:\"\",\n            Password:\"\",ConfirmPassword:\"\"\n        })\n        this.props.signup({Username,Password},this.userExists)\n        }\n         if(ConfirmPassword!==Password){\n            this.setState({errorPassword:\"Passwords do not match.\"})\n        }\n        if(Username.length<=3){\n            this.setState({errorUsername:\"Username should be greater than 3 characters\"})\n        }\n    }\n    renderSignupForm=()=>{\n        const fields=[\n        {tag:\"input\",label:\"Username\",type:\"text\",className:\"input-field\",\n        value:this.state.Username,onChange:this.handleChange,\n    error:this.state.errorUsername},\n        {tag:\"input\",label:\"Password\",type:\"password\",className:\"input-field\",\n        value:this.state.Password,onChange:this.handleChange},\n        {tag:\"input\",label:\"ConfirmPassword\",type:\"password\",className:\"input-field\",\n        value:this.state.ConfirmPassword,onChange:this.handleChange,\n    error:this.state.errorPassword}\n    ]\n       return fields.map((field,i)=>{\n           if(field.tag===\"input\"){\n            return(\n                <React.Fragment>\n                <div className=\"field-container\" key={i}>\n                <label>{field.label}:</label>\n                <input className=\"input-field\" type={field.type} value={field.value} onChange={(e)=>field.onChange(e.target.value,field.label)} />\n                </div>\n               {field.label!==\"Password\"? <div className=\"error-validation\">{field.error}</div>:null}\n                </React.Fragment>\n            )\n           }\n        })\n       \n    }\n    render(){\n    \n        return(\n           <div className=\"signup-container\">\n                <form onSubmit={e=>{this.onSubmit(e)}}>\n                {this.renderSignupForm()}\n                <button type=\"submit\" className=\"btn-login\" id=\"btn-signup\">Signup</button>\n                </form>\n                <div className=\"user-exists-tooltip\">{this.state.userExists}</div>\n                <div className=\"user-exists-tooltip\" style={{color:\"green\"}}>{this.state.signUpDone}</div>\n                </div>\n        )\n    }\n}\nexport default connect(null,{signup})(Signup);"]},"metadata":{},"sourceType":"module"}