{"ast":null,"code":"var _jsxFileName = \"D:\\\\crud_employee\\\\todoApp-master\\\\todo\\\\client\\\\src\\\\components\\\\createTodo\\\\createTodo.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { addTodo, editTodo } from \"../../actions/todo\";\n\nclass CreateTodo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (value, name) => {\n      this.setState(prevstate => {\n        return {\n          [name]: value\n        };\n      });\n    };\n\n    this.handleDatalistChange = e => {\n      this.setState({\n        Bucket: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      let _this$state = this.state,\n          Title = _this$state.Title,\n          Category = _this$state.Category,\n          Description = _this$state.Description,\n          Bucket = _this$state.Bucket;\n      const Creator = this.props.user.Username;\n\n      if (Bucket === \"\") {\n        Bucket = \"Customised\";\n      }\n\n      if (this.props.todo === null) {\n        this.props.addTodo({\n          Title,\n          Category,\n          Description,\n          Creator,\n          Bucket\n        }, this.props.closeCreateTodo);\n      } else {\n        this.props.editTodo({\n          id: this.props.todo._id,\n          Title,\n          Category,\n          Description,\n          Creator,\n          Bucket\n        }, this.props.closeCreateTodo, this.props.activeTodoDone);\n      }\n    };\n\n    this.renderTodoForm = () => {\n      const fields = [{\n        tag: \"input\",\n        label: \"Title\",\n        type: \"text\",\n        className: \"input-field\",\n        value: this.state.Title,\n        onChange: this.handleChange\n      }, {\n        tag: \"input\",\n        label: \"Category\",\n        type: \"text\",\n        className: \"input-field\",\n        value: this.state.Category,\n        onChange: this.handleChange\n      }, {\n        tag: \"input\",\n        label: \"Description\",\n        type: \"text\",\n        className: \"input-field\",\n        value: this.state.Description,\n        onChange: this.handleChange\n      }];\n      return fields.map((field, i) => {\n        if (field.tag === \"input\") {\n          return React.createElement(\"div\", {\n            className: \"field-container\",\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, field.label, \":\"), React.createElement(\"input\", {\n            className: \"input-field\",\n            type: field.type,\n            value: field.value,\n            onChange: e => field.onChange(e.target.value, field.label),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }));\n        }\n      });\n    };\n\n    this.state = {\n      Category: \"\",\n      Description: \"\",\n      Title: \"\",\n      Bucket: \"\",\n      data: this.props.data\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.todo !== this.props.todo && this.props.todo !== null) {\n      this.setState({\n        Category: this.props.todo.Category,\n        Description: this.props.todo.Description,\n        Title: this.props.todo.Title\n      });\n    }\n\n    if (prevProps.data !== this.props.data) {\n      this.setState({\n        data: this.props.data\n      });\n    }\n  }\n\n  render() {\n    const styleobj = {\n      color: \"white\",\n      textAlign: \"right\",\n      margin: \"15px\",\n      cursor: \"pointer\",\n      padding: \"4px\"\n    };\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styleobj,\n      onClick: e => {\n        this.props.closeCreateTodo();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.renderTodoForm(), React.createElement(\"div\", {\n      className: \"field-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Bucket:\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input-field\",\n      list: \"data\",\n      onChange: this.handleDatalistChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"datalist\", {\n      id: \"data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.data.map((item, key) => React.createElement(\"option\", {\n      key: key,\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))))), this.props.todo === null ? React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn-login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Create Todo\") : React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn-login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Edit Todo\")));\n  }\n\n}\n\nexport default withRouter(connect(null, {\n  addTodo,\n  editTodo\n})(CreateTodo));","map":{"version":3,"sources":["D:/crud_employee/todoApp-master/todo/client/src/components/createTodo/createTodo.js"],"names":["React","withRouter","connect","addTodo","editTodo","CreateTodo","Component","constructor","props","handleChange","value","name","setState","prevstate","handleDatalistChange","e","Bucket","target","onSubmit","preventDefault","state","Title","Category","Description","Creator","user","Username","todo","closeCreateTodo","id","_id","activeTodoDone","renderTodoForm","fields","tag","label","type","className","onChange","map","field","i","data","componentDidUpdate","prevProps","prevState","render","styleobj","color","textAlign","margin","cursor","padding","item","key"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport {addTodo,editTodo} from \"../../actions/todo\"\nclass CreateTodo extends React.Component{\n    constructor(props){\n        super(props);\n       \n        this.state={\n            Category: \"\",\n            Description:\"\",\n            Title: \"\",\n            Bucket:\"\",\n            data:this.props.data\n        }\n    }\n    componentDidUpdate(prevProps,prevState){\n  \n        if(prevProps.todo!==this.props.todo && this.props.todo !==null){\n            this.setState({\n                Category:this.props.todo.Category,\n                Description:this.props.todo.Description,\n                Title:this.props.todo.Title,\n              \n            })\n        }\n        if(prevProps.data!==this.props.data){\n            this.setState({\n                data:this.props.data\n            })\n        }\n    }\n    handleChange=(value,name)=>{\n        this.setState((prevstate)=>{\n            return{\n            [name]:value\n            }\n        })\n    }\n    handleDatalistChange=(e)=>{\n        this.setState({\n            Bucket:e.target.value\n        })\n    }\n    onSubmit=(e)=>{\n        e.preventDefault();\n    let {Title,Category,Description,Bucket}=this.state;\n     const Creator=this.props.user.Username;\n     if(Bucket===\"\"){\n        Bucket=\"Customised\"\n     }\n     if(this.props.todo===null){\n        this.props.addTodo({Title,Category,Description,Creator,Bucket},this.props.closeCreateTodo)\n     }\n     else{\n      \n         this.props.editTodo({id:this.props.todo._id,Title,Category,Description,Creator,Bucket},this.props.closeCreateTodo, this.props.activeTodoDone)\n        \n     }\n    \n    }\n  \n    renderTodoForm=()=>{\n        const fields=[ {tag:\"input\",label:\"Title\",type:\"text\",className:\"input-field\",\n        value:this.state.Title,onChange:this.handleChange},\n        {tag:\"input\",label:\"Category\",type:\"text\",className:\"input-field\",\n        value:this.state.Category,onChange:this.handleChange},\n        {tag:\"input\",label:\"Description\",type:\"text\",className:\"input-field\",\n        value:this.state.Description,onChange:this.handleChange}]\n       return fields.map((field,i)=>{\n           if(field.tag===\"input\"){\n            return(\n                <div className=\"field-container\" key={i}>\n                <label>{field.label}:</label>\n                <input className=\"input-field\" type={field.type} value={field.value} onChange={(e)=>field.onChange(e.target.value,field.label)} />\n                </div>\n            )\n           }\n         \n        })\n       \n    }\n    render(){\n      \n        const styleobj={\n            color:\"white\",\n           textAlign:\"right\",\n            margin:\"15px\",\n            cursor:\"pointer\",\n            padding:\"4px\"\n        }\n        return(\n            <React.Fragment>\n                <form onSubmit={e=>this.onSubmit(e)}>\n                    <div style={styleobj} onClick={e=>{this.props.closeCreateTodo()}}>X</div>\n                    <div>\n                {this.renderTodoForm()}\n                <div className=\"field-container\">\n                    <label>Bucket:</label>\n                <input type=\"text\" className=\"input-field\" list=\"data\" onChange={this.handleDatalistChange} />\n\n               <datalist id=\"data\">\n       {this.state.data.map((item, key) =>\n         <option key={key} value={item} />\n  )}\n</datalist>\n</div>\n                </div>\n                {this.props.todo===null?<button type=\"submit\" className=\"btn-login\">Create Todo</button>\n                :<button type=\"submit\" className=\"btn-login\">Edit Todo</button>}\n                </form>\n                \n            </React.Fragment>\n        )\n    }\n}\n\nexport default withRouter(connect(null,{addTodo,editTodo})(CreateTodo));"]},"metadata":{},"sourceType":"module"}