{"ast":null,"code":"var _jsxFileName = \"D:\\\\crud_employee\\\\todoApp-master\\\\todo\\\\client\\\\src\\\\components\\\\login\\\\login.js\";\nimport React from \"react\";\nimport \"./login.css\";\nimport { withRouter } from \"react-router-dom\";\nimport { login } from \"../../actions/user\";\nimport { connect } from 'react-redux';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (value, name) => {\n      this.setState(prevstate => {\n        return {\n          [name]: value\n        };\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.props.login({\n        Username: this.state.Username,\n        Password: this.state.Password\n      }, this.props.history, this.userNotFound);\n    };\n\n    this.userNotFound = errorData => {\n      this.setState({\n        notFound: errorData\n      });\n      setTimeout(() => this.setState({\n        notFound: \"\"\n      }), 2000);\n    };\n\n    this.renderLoginForm = () => {\n      const fields = [{\n        tag: \"input\",\n        label: \"Username\",\n        type: \"text\",\n        className: \"input-field\",\n        value: this.state.Username,\n        onChange: this.handleChange\n      }, {\n        tag: \"input\",\n        label: \"Password\",\n        type: \"password\",\n        className: \"input-field\",\n        value: this.state.Password,\n        onChange: this.handleChange\n      }];\n      return fields.map((field, i) => {\n        if (field.tag === \"input\") {\n          return React.createElement(\"div\", {\n            className: \"field-container\",\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }, field.label, \":\"), React.createElement(\"input\", {\n            className: \"input-field\",\n            type: field.type,\n            value: field.value,\n            onChange: e => field.onChange(e.target.value, field.label),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }));\n        }\n      });\n    };\n\n    this.state = {\n      Username: \"\",\n      Password: \"\",\n      notFound: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.renderLoginForm(), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn-login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Login\")), React.createElement(\"div\", {\n      className: \"user-not-found\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.notFound));\n  }\n\n}\n\nexport default withRouter(connect(null, {\n  login\n})(Login));","map":{"version":3,"sources":["D:/crud_employee/todoApp-master/todo/client/src/components/login/login.js"],"names":["React","withRouter","login","connect","Login","Component","constructor","props","handleChange","value","name","setState","prevstate","onSubmit","e","preventDefault","Username","state","Password","history","userNotFound","errorData","notFound","setTimeout","renderLoginForm","fields","tag","label","type","className","onChange","map","field","i","target","render"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport \"./login.css\";\nimport {withRouter} from \"react-router-dom\";\nimport {login} from \"../../actions/user\";\nimport {connect} from 'react-redux';\nclass Login extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            Username:\"\",\n            Password:\"\",\n            notFound:\"\"\n        }\n    }\n    handleChange=(value,name)=>{\n        this.setState((prevstate)=>{\n            return{\n            [name]:value\n            }\n        })\n    }\n    onSubmit=(e)=>{\n        e.preventDefault();\n        this.props.login({Username:this.state.Username,Password:this.state.Password},\n            this.props.history,this.userNotFound)\n    }\n    userNotFound=(errorData)=>{\n        this.setState({notFound:errorData});\n        setTimeout(()=>this.setState({\n            notFound:\"\"\n        }),2000)\n    }\n    renderLoginForm=()=>{\n        const fields=[\n        {tag:\"input\",label:\"Username\",type:\"text\",className:\"input-field\",\n        value:this.state.Username,onChange:this.handleChange},\n        {tag:\"input\",label:\"Password\",type:\"password\",className:\"input-field\",\n        value:this.state.Password,onChange:this.handleChange}]\n       return fields.map((field,i)=>{\n           if(field.tag===\"input\"){\n            return(\n                <div className=\"field-container\" key={i}>\n                <label>{field.label}:</label>\n                <input className=\"input-field\" type={field.type} value={field.value} onChange={(e)=>field.onChange(e.target.value,field.label)} />\n                </div>\n            )\n           }\n        })\n       \n    }\n    render(){\n \n        return(\n            <div className=\"login-container\">\n                 <form onSubmit={e=>this.onSubmit(e)}>\n                {this.renderLoginForm()}\n                <button type=\"submit\" className=\"btn-login\">Login</button>\n                </form>\n                <div className=\"user-not-found\">{this.state.notFound}</div>\n           </div>\n        )\n    }\n}\nexport default withRouter(connect(null,{login})(Login));"]},"metadata":{},"sourceType":"module"}